<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="playerEditMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAfwAAAP+AAAH/wAAD/+AAB//4AB///gB/8=
</value>
  </data>
</root>